node{
  /*  stage('Preparation') 
   { 
      git 'https://github.com/ranjithanagaraj/Project-1.git'
   }
        stage('SonarQube analysis') 
    { 
         sh 'mvn sonar:sonar' 
     }
      stage('Build')
   {
         sh 'mvn clean install -Dv=${BUILD_NUMBER}'
   }
 
     stage('Artifactory upload')
     	{
		
			def server = Artifactory.server 'artifactory'
			def uploadSpec = """{
				
			"files":[
			{
			"pattern":"/var/lib/jenkins/workspace/pipeline1/target/*.jar",

			"target":"art1"
			}
			]
			}"""
			server.upload(uploadSpec)

    }
    		stage('downloading artifact')
				     	{
		
			def server = Artifactory.server 'artifactory'
			def downloadSpec = """{
				
			"files":[
			{
			"pattern":"art1/*.jar",

			"target":"/var/lib/jenkins/workspace/pipeline1/"
			}
			]
			}"""
			server.download(downloadSpec)

    }*/
   stage("Container Prune"){
	    sh "docker container prune -f"
    }
    stage('docker image build')
    {
         sh "docker build -t spring-redis-image ."
         sh "docker run --name redis -d redis"
    echo "Image build complete"
    }
    stage('spin up containers')
    {
            	sh "docker run -p 8086:8086 --name spring-redis --link redis -d spring-redis-image"
        	 echo "container is up"
    }
}


